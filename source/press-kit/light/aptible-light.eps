%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G31) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 297 77
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 297 77
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.92156863 0.94509804 0.97647059 sc
q
108.86406 33.939888 m
102.59955 33.939888 97.745255 32.458317 97.745255 27.916058 c
97.745255 24.861738 99.780724 23.37499 102.44304 23.37499 c
105.34032 23.37499 107.84573 25.331173 108.62989 27.759579 c
108.78561 28.385096 108.86406 29.088652 108.86406 29.794199 c
108.86406 33.939888 l
h
120.37355 25.098644 m
120.37355 21.496054 120.52966 17.974289 121 15.860434 c
110.27228 15.860434 l
109.56897 19.696749 l
109.3344 19.696749 l
106.82859 16.640438 102.91298 15 98.371704 15 c
90.620125 15 86 20.634426 86 26.741074 c
86 36.684433 94.927223 41.379589 108.47138 41.379589 c
108.47138 41.849823 l
108.47138 43.883648 107.37579 46.781887 101.50356 46.781887 c
97.588341 46.781887 93.438957 45.452015 90.931953 43.961685 c
88.740768 51.555878 l
91.402687 53.042622 96.648468 55 103.61749 55 c
116.38067 55 120.37355 47.484646 120.37355 38.485729 c
120.37355 25.098644 l
h
W
0 0 297 77 rc
81 60 m
126 60 l
126 10 l
81 10 l
h
f
Q
q
134.30721 32.148064 m
134.30721 31.202177 134.38626 30.415409 134.54356 29.627439 c
135.33333 26.3962 138.0939 23.954535 141.56558 23.954535 c
146.77332 23.954535 149.85132 28.289173 149.85132 34.829006 c
149.85132 40.975254 147.08875 45.62532 141.72411 45.62532 c
138.33107 45.62532 135.33333 43.102692 134.54356 39.553619 c
134.38626 38.92757 134.30721 38.137196 134.30721 37.428185 c
134.30721 32.148064 l
h
122.31503 41.20932 m
122.31503 46.254574 122.15691 50.508652 122 54.133873 c
132.41505 54.133873 l
132.96524 48.774395 l
133.12375 48.774395 l
135.96419 52.793602 140.38295 55 145.98476 55 c
154.42699 55 162 47.671394 162 35.379303 c
162 21.354153 153.08502 14.735364 144.48628 14.735364 c
139.83035 14.735364 136.20015 16.62553 134.4649 19.146553 c
134.30721 19.146553 l
134.30721 0 l
122.31503 0 l
122.31503 41.20932 l
h
W
0 0 297 77 rc
117 60 m
167 60 l
167 -5 l
117 -5 l
h
f
Q
q
179.56273 66 m
179.56273 55.494492 l
188 55.494492 l
188 46.64669 l
179.56273 46.64669 l
179.56273 32.586716 l
179.56273 27.925367 180.72369 25.794775 184.20692 25.794775 c
185.83241 25.794775 186.60678 25.873924 187.68939 26.109764 c
187.76852 17.027328 l
186.29657 16.473286 183.43336 16 180.18239 16 c
176.38931 16 173.21629 17.342718 171.28098 19.315414 c
169.11418 21.605106 168.03079 25.319881 168.03079 30.772316 c
168.03079 46.64669 l
163 46.64669 l
163 55.494492 l
168.03079 55.494492 l
168.03079 62.761322 l
179.56273 66 l
h
W
0 0 297 77 rc
158 71 m
193 71 l
193 11 l
158 11 l
h
f
Q
q
191 16 m
203 16 l
203 55 l
191 55 l
191 16 l
h
W
0 0 297 77 rc
186 60 m
208 60 l
208 11 l
186 11 l
h
f
Q
q
217.30742 33.391796 m
217.30742 32.596027 217.38567 31.885086 217.54498 31.246046 c
218.3327 28.068222 221.09395 25.527416 224.56506 25.527416 c
229.69469 25.527416 232.84999 29.498991 232.84999 36.486813 c
232.84999 42.522942 230.1674 47.28867 224.56506 47.28867 c
221.33031 47.28867 218.3327 44.826229 217.54498 41.332115 c
217.38567 40.61956 217.30742 39.904175 217.30742 39.108002 c
217.30742 33.391796 l
h
205.315 62.356983 m
217.30742 70 l
217.30742 51.102303 l
217.46512 51.102303 l
219.75204 54.437664 223.77654 56.580585 229.14212 56.580585 c
238.37169 56.580585 245.07837 48.879402 244.99931 36.966293 c
244.99931 22.985397 236.24165 16 227.40616 16 c
222.90816 16 218.4892 17.664248 215.80742 22.274054 c
215.65051 22.274054 l
215.17619 16.872923 l
205 16.872923 l
205.15851 19.413729 205.315 24.097052 205.315 28.468531 c
205.315 62.356983 l
h
W
0 0 297 77 rc
200 75 m
250 75 l
250 11 l
200 11 l
h
f
Q
q
246 17 m
258 17 l
258 73 l
246 73 l
246 17 l
h
W
0 0 297 77 rc
241 78 m
263 78 l
263 12 l
241 12 l
h
f
Q
q
286.08328 39.344398 m
286.08328 42.1609 284.84366 47.093964 279.50287 47.093964 c
274.47156 47.093964 272.45697 42.475441 272.14944 39.344398 c
286.08328 39.344398 l
h
272.22583 31.20425 m
272.61331 26.192356 277.4119 23.845667 282.90903 23.845667 c
286.93463 23.845667 290.18802 24.394316 293.36108 25.490818 c
294.90942 17.427114 l
291.03781 15.783158 286.3172 15 281.20557 15 c
268.35422 15 261 22.516647 261 34.569401 c
261 44.278255 267.03897 55 280.12189 55 c
292.35382 55 297 45.373962 297 35.901211 c
297 33.861893 296.76688 32.065048 296.61292 31.125019 c
272.22583 31.20425 l
h
W
0 0 297 77 rc
256 60 m
302 60 l
302 10 l
256 10 l
h
f
Q
q
197.38588 58 m
193.50806 58 191 60.668579 191 64.001801 c
191 67.408737 193.58453 70 197.53928 70 c
201.49236 70 203.92516 67.408737 204 64.001801 c
204 60.668579 201.49236 58 197.46278 58 c
197.38588 58 l
h
W
0 0 297 77 rc
186 75 m
209 75 l
209 53 l
186 53 l
h
f
Q
q
74.766586 35.644409 m
76.838715 32.745903 77.998016 29.192776 78 25.475395 c
78 23.80039 77.763062 22.090933 77.268143 20.400303 c
76.153694 16.582767 73.887886 13.407429 70.985077 11.195991 c
68.082664 8.9817467 64.532936 7.717381 60.839928 7.7161789 c
59.334152 7.7161789 57.806942 7.9277077 56.298386 8.3667908 c
56.299973 8.3667908 l
54.847775 8.7902489 53.507893 9.4172239 52.27914 10.182815 c
49.037395 6.2983742 44.211285 4.0012021 39.093071 4 c
37.49839 4 35.877514 4.2207432 34.274899 4.6902733 c
32.013851 5.3505001 29.981407 6.4397941 28.255756 7.8439775 c
27.151228 8.7433767 26.189182 9.7785864 25.349375 10.901933 c
22.644611 8.883194 19.336582 7.7289987 15.874564 7.7265949 c
14.402919 7.7265949 12.905872 7.9337173 11.425892 8.3667908 c
7.9737954 9.3727551 5.1067057 11.467612 3.1183171 14.161802 c
1.1271504 16.856792 0.0015875358 20.159128 0 23.60729 c
0 25.082785 0.20955473 26.585121 0.64136446 28.068228 c
1.5557851 31.197895 3.3584321 33.846012 5.6837749 35.789036 c
6.3219643 36.323864 6.5414414 36.511356 7.2530541 36.938423 c
5.6575809 17.704111 22.699778 22.103752 23.152225 22.342524 c
23.213743 22.080517 25.08902 17.007427 28.478806 17.299082 c
33.093376 17.694496 33.181881 23.477489 33.192993 23.494314 c
33.192993 23.494314 33.345795 23.511942 33.530739 23.533175 c
53.317787 22.755966 49.87442 38.726402 49.635895 39.731964 c
50.189945 39.783245 50.759075 39.850151 51.34726 39.950306 c
52.53553 40.15382 53.684113 40.463104 54.781097 40.898979 c
56.424595 41.549992 57.952995 42.503075 59.235325 43.775455 c
59.738178 44.274632 60.187847 44.831097 60.604179 45.418007 c
61.026066 46.010529 61.407074 46.635502 61.733315 47.305344 c
61.911118 47.667507 62.080986 48.035278 62.228626 48.419876 c
62.229816 48.425083 l
62.366741 48.775227 62.478661 49.132183 62.586617 49.488338 c
62.929523 49.036434 63.266476 48.575317 63.583984 48.088161 c
64.517059 46.664745 65.332657 45.111931 65.934731 43.552307 c
66.176826 42.931339 66.377647 42.30637 66.542755 41.686604 c
69.957542 40.572472 72.790901 38.409107 74.766586 35.644409 c
h
53.473007 62.81554 m
62.026253 60.579266 63.089905 43.758308 43.896992 42.965874 c
44.067257 42.71949 44.17997 42.542816 44.302212 42.368946 c
46.742649 38.884327 46.61644 33.180256 42.467018 30.265724 c
40.535385 28.908014 38.344189 28.206923 35.982334 27.965347 c
35.108791 27.873606 34.221359 27.904453 33.352581 27.799089 c
30.958576 27.516249 29.756018 26.109661 29.692913 23.509619 c
29.675449 22.878237 29.430969 22.163525 28.991222 21.968422 c
28.991222 21.968422 27.071096 21.145943 26.813122 24.903788 c
26.619047 27.72217 27.104435 29.898754 29.493677 31.504852 c
30.882374 32.441109 32.389343 33.236343 33.893532 34.005939 c
36.007336 35.085621 36.796341 36.770641 36.112114 38.974869 c
35.662048 40.430332 34.480522 41.955902 33.110481 42.82085 c
33.034676 42.670216 32.935852 42.5312 32.883858 42.376957 c
31.848389 39.313797 29.632982 37.389202 26.466246 36.476181 c
24.856485 36.012661 23.188778 35.732628 21.548855 35.375271 c
20.624512 35.171352 20.013706 34.633717 19.837093 33.750343 c
19.66048 32.863365 20.052601 32.143044 20.765009 31.59379 c
21.56354 30.975227 22.384691 31.106632 22.94906 31.930313 c
23.214973 32.314911 23.436037 32.732761 23.70949 33.112553 c
23.990484 33.501156 24.390146 33.750343 24.900143 33.605721 c
25.451414 33.448673 25.582783 32.980747 25.626043 32.506008 c
25.872904 29.797798 24.186148 27.31073 21.454792 26.361254 c
19.173107 25.564816 17.071209 26.009506 15.159022 27.321146 c
12.765812 28.963701 11.404897 31.222412 11.28345 34.03759 c
11.177483 36.511436 12.323286 38.50774 14.389464 39.949986 c
15.390009 40.647869 16.545338 41.140636 17.623274 41.738365 c
18.873856 42.435852 21.315088 43.949406 21.290085 44.001884 c
20.307402 43.765919 19.334639 43.467854 18.340841 43.305202 c
15.445573 42.82085 12.57372 42.939434 9.7983103 43.920559 c
5.6032472 45.40567 3.6327186 48.990444 3.2671883 53.512676 c
2.9957197 56.865891 4.9011598 60.981892 8.845789 62.055561 c
10.786551 62.584381 12.532047 62.517078 14.323185 61.561592 c
15.493198 60.937019 16.0917 58.790081 12.978939 58.572544 c
11.725579 58.485207 10.706779 57.654716 10.151935 56.513744 c
9.3692789 54.903236 10.042395 53.092422 11.730342 52.210251 c
16.0917 49.932709 21.370653 53.325584 21.693319 53.64328 c
21.100771 54.332752 20.572123 55.085522 20.117691 55.897182 c
18.93696 58.00526 18.25432 60.48632 18.25432 63.142052 c
18.25432 70.795952 23.909519 77 30.884754 77 c
37.859989 77 43.51519 70.795952 43.51519 63.142052 c
43.51519 60.559235 42.869461 58.142277 41.747467 56.072655 c
41.295021 55.237759 40.765976 54.459747 40.169456 53.749043 c
41.031887 52.993069 44.592731 49.224007 49.594261 51.640965 c
54.857338 54.185322 51.888649 59.494377 47.680489 58.721977 c
47.676517 58.721977 45.241238 57.917526 44.915001 59.444302 c
44.84515 59.768803 45.067402 60.241539 45.276165 60.53159 c
46.560085 62.323177 50.383266 63.624001 53.473007 62.81554 c
h
W
0 0 297 77 rc
-5 82 m
83 82 l
83 -1 l
-5 -1 l
h
f
ep
end
%%Trailer
%%EOF
